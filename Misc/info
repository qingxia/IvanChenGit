Terminal
1, Press Ctrl + D to input EOF.
2, kill, send SIGTERM to the process; kill -9 send SIGKILL to the process.


Vi
1, gd/D goes to declaration, local file ....

2, gg goes to the first line.

3, G goes to the last line.

4, gf goes to the file under the cursor, Ctrl + W + F open the file in a horizontal split window. (If the file can be found in the search path, which could be set in .vimrc with set path+=...)

5, :make well call make, :cn go to the next error, :cc show current error message.

6, Ctrl + p, Ctrl + n, previous and next word completion.

7, mX will bookmark the current line and can go back with `X.
8, Ctrl + i, Ctrl + o, go forward and back between the locations.

9, [ + Ctrl + i goto the word under the cursor, Ctrl + W + I show the work under the cursor in  a horizontal split window. (also search path) 

Ctrl + ], Ctrl + T goto and go back for tag under the cursor, need to generate the tags file with ctags and set tags=./tags,... in .vimrc. (Still not working so well, just worked once so far ...)

10, % will go the the matching anything, like brace, comments and preprocessor ...


ACE
1, Set ACE_DEBUG env variable to any non-zero-length string would enable ACE::debug(), just like ACE::debug(1) call.
